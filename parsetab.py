
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocEQNELTLEGTGEleftPLUSMINUSleftTIMESDIVIDEAGARRAELERROR AND CADENA CHICOENTERO CLASE COLON COMMA CUATRO DEFAULT DIVIDE DOBLE DOMIENTRAS EQ EQUALS FAKE FIN FLOTANTE GE GT IDENTIFICADOR INICIO INTENTA LBRACE LBRACKET LE LETRA LT MIENTRAS MINUS NE NUMERO OPCION OR PLUS PREGUNTAEXISTENCIAL PUESSINO RBRACE RBRACKET SEMICOLON STRING SWITCH TIMES VAR VERDAD VERDADEROOFALSOprograma : INICIO cuerpo FINcuerpo : declaraciones\n| instrucciones\n| cuerpo declaraciones\n| cuerpo instruccionesdeclaraciones : declaracion\n| declaraciones declaraciondeclaracion : VAR IDENTIFICADOR COLON tipo SEMICOLONtipo : CHICOENTERO\n| FLOTANTE\n| DOBLE\n| VERDADEROOFALSO\n| STRING\n| LETRAinstrucciones : instruccion\n| instrucciones instruccioninstruccion : asignacion\n| decision\n| ciclo\n| para\n| do_mientras\n| tratamiento_error\n| seleccion_multiple\n| llamada_funcion\n| bloqueasignacion : IDENTIFICADOR EQUALS expresion SEMICOLONdecision : PREGUNTAEXISTENCIAL LBRACKET expresion RBRACKET bloque PUESSINO bloqueciclo : MIENTRAS LBRACKET expresion RBRACKET bloquepara : CUATRO LBRACKET asignacion expresion SEMICOLON asignacion RBRACKET bloquedo_mientras : DOMIENTRAS bloque MIENTRAS LBRACKET expresion RBRACKET SEMICOLONtratamiento_error : INTENTA bloque AGARRAELERROR LBRACKET IDENTIFICADOR RBRACKET bloqueseleccion_multiple : SWITCH LBRACKET expresion RBRACKET LBRACE casos defecto RBRACEcasos : caso\n| casos casocaso : OPCION valor COLON instruccionesdefecto : DEFAULT COLON instruccionesllamada_funcion : IDENTIFICADOR LBRACKET lista_expresiones RBRACKET SEMICOLONlista_expresiones : expresion\n| lista_expresiones COMMA expresion\n| bloque : LBRACE instrucciones RBRACE\n| LBRACE RBRACEexpresion : expresion_logicaexpresion_logica : expresion_relacional\n| expresion_logica AND expresion_relacional\n| expresion_logica OR expresion_relacionalexpresion_relacional : expresion_aritmetica\n| expresion_aritmetica EQ expresion_aritmetica\n| expresion_aritmetica NE expresion_aritmetica\n| expresion_aritmetica LT expresion_aritmetica\n| expresion_aritmetica LE expresion_aritmetica\n| expresion_aritmetica GT expresion_aritmetica\n| expresion_aritmetica GE expresion_aritmeticaexpresion_aritmetica : termino\n| expresion_aritmetica PLUS termino\n| expresion_aritmetica MINUS terminotermino : factor\n| termino TIMES factor\n| termino DIVIDE factorfactor : LBRACKET expresion RBRACKET\n| valor\n| IDENTIFICADORvalor : NUMERO\n| VERDAD\n| FAKE\n| CADENA'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,26,],[0,-1,]),'VAR':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,27,28,29,30,41,65,73,95,109,112,124,126,127,132,133,],[8,8,8,-3,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,8,-5,-7,-16,-42,-41,-26,-8,-37,-28,-27,-30,-31,-29,-32,]),'IDENTIFICADOR':([2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,25,27,28,29,30,32,33,34,35,36,39,40,41,50,60,65,73,74,75,76,77,78,79,80,81,82,83,84,85,88,92,93,95,109,112,113,124,126,127,132,133,134,135,136,137,],[9,9,-2,9,-6,-15,31,-17,-18,-19,-20,-21,-22,-23,-24,-25,9,-4,9,-7,-16,43,43,43,43,61,43,9,-42,43,43,-41,-26,43,43,43,43,43,43,43,43,43,43,43,43,43,43,115,-8,-37,-28,61,-27,-30,-31,-29,-32,9,9,9,9,]),'PREGUNTAEXISTENCIAL':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,25,27,28,29,30,40,41,65,73,95,109,112,124,126,127,132,133,134,135,136,137,],[19,19,-2,19,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,19,-4,19,-7,-16,19,-42,-41,-26,-8,-37,-28,-27,-30,-31,-29,-32,19,19,19,19,]),'MIENTRAS':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,25,27,28,29,30,37,40,41,65,73,95,109,112,124,126,127,132,133,134,135,136,137,],[20,20,-2,20,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,20,-4,20,-7,-16,62,20,-42,-41,-26,-8,-37,-28,-27,-30,-31,-29,-32,20,20,20,20,]),'CUATRO':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,25,27,28,29,30,40,41,65,73,95,109,112,124,126,127,132,133,134,135,136,137,],[21,21,-2,21,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,21,-4,21,-7,-16,21,-42,-41,-26,-8,-37,-28,-27,-30,-31,-29,-32,21,21,21,21,]),'DOMIENTRAS':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,25,27,28,29,30,40,41,65,73,95,109,112,124,126,127,132,133,134,135,136,137,],[22,22,-2,22,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,22,-4,22,-7,-16,22,-42,-41,-26,-8,-37,-28,-27,-30,-31,-29,-32,22,22,22,22,]),'INTENTA':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,25,27,28,29,30,40,41,65,73,95,109,112,124,126,127,132,133,134,135,136,137,],[23,23,-2,23,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,23,-4,23,-7,-16,23,-42,-41,-26,-8,-37,-28,-27,-30,-31,-29,-32,23,23,23,23,]),'SWITCH':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,25,27,28,29,30,40,41,65,73,95,109,112,124,126,127,132,133,134,135,136,137,],[24,24,-2,24,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,24,-4,24,-7,-16,24,-42,-41,-26,-8,-37,-28,-27,-30,-31,-29,-32,24,24,24,24,]),'LBRACE':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,22,23,25,27,28,29,30,40,41,65,73,89,90,94,95,109,112,117,120,124,125,126,127,132,133,134,135,136,137,],[25,25,-2,25,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,25,25,25,-4,25,-7,-16,25,-42,-41,-26,25,25,116,-8,-37,-28,25,25,-27,25,-30,-31,-29,-32,25,25,25,25,]),'FIN':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,27,28,29,30,41,65,73,95,109,112,124,126,127,132,133,],[26,-2,-3,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-4,-5,-7,-16,-42,-41,-26,-8,-37,-28,-27,-30,-31,-29,-32,]),'RBRACE':([7,10,11,12,13,14,15,16,17,18,25,30,40,41,65,73,109,112,124,126,127,128,132,133,136,],[-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,41,-16,65,-42,-41,-26,-37,-28,-27,-30,-31,133,-29,-32,-36,]),'DEFAULT':([7,10,11,12,13,14,15,16,17,18,30,41,65,73,109,112,121,122,124,126,127,129,132,133,137,],[-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-16,-42,-41,-26,-37,-28,130,-33,-27,-30,-31,-34,-29,-32,-35,]),'OPCION':([7,10,11,12,13,14,15,16,17,18,30,41,65,73,109,112,116,121,122,124,126,127,129,132,133,137,],[-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-16,-42,-41,-26,-37,-28,123,123,-33,-27,-30,-31,-34,-29,-32,-35,]),'EQUALS':([9,61,],[32,32,]),'LBRACKET':([9,19,20,21,24,32,33,34,35,39,50,60,62,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,92,],[33,34,35,36,39,50,50,50,50,50,50,50,92,93,-26,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'COLON':([31,52,53,54,55,130,131,],[42,-63,-64,-65,-66,134,135,]),'NUMERO':([32,33,34,35,39,50,60,73,74,75,76,77,78,79,80,81,82,83,84,85,88,92,123,],[52,52,52,52,52,52,52,-26,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'VERDAD':([32,33,34,35,39,50,60,73,74,75,76,77,78,79,80,81,82,83,84,85,88,92,123,],[53,53,53,53,53,53,53,-26,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'FAKE':([32,33,34,35,39,50,60,73,74,75,76,77,78,79,80,81,82,83,84,85,88,92,123,],[54,54,54,54,54,54,54,-26,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'CADENA':([32,33,34,35,39,50,60,73,74,75,76,77,78,79,80,81,82,83,84,85,88,92,123,],[55,55,55,55,55,55,55,-26,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'RBRACKET':([33,43,45,46,47,48,49,51,52,53,54,55,56,57,58,59,64,73,86,96,97,98,99,100,101,102,103,104,105,106,107,108,110,114,115,118,],[-40,-62,-43,-44,-47,-54,-57,-61,-63,-64,-65,-66,87,-38,89,90,94,-26,108,-45,-46,-48,-49,-50,-51,-52,-53,-55,-56,-58,-59,-60,-39,119,120,125,]),'COMMA':([33,43,45,46,47,48,49,51,52,53,54,55,56,57,96,97,98,99,100,101,102,103,104,105,106,107,108,110,],[-40,-62,-43,-44,-47,-54,-57,-61,-63,-64,-65,-66,88,-38,-45,-46,-48,-49,-50,-51,-52,-53,-55,-56,-58,-59,-60,-39,]),'AGARRAELERROR':([38,41,65,],[63,-42,-41,]),'PUESSINO':([41,65,111,],[-42,-41,117,]),'CHICOENTERO':([42,],[67,]),'FLOTANTE':([42,],[68,]),'DOBLE':([42,],[69,]),'VERDADEROOFALSO':([42,],[70,]),'STRING':([42,],[71,]),'LETRA':([42,],[72,]),'TIMES':([43,48,49,51,52,53,54,55,104,105,106,107,108,],[-62,84,-57,-61,-63,-64,-65,-66,84,84,-58,-59,-60,]),'DIVIDE':([43,48,49,51,52,53,54,55,104,105,106,107,108,],[-62,85,-57,-61,-63,-64,-65,-66,85,85,-58,-59,-60,]),'EQ':([43,47,48,49,51,52,53,54,55,104,105,106,107,108,],[-62,76,-54,-57,-61,-63,-64,-65,-66,-55,-56,-58,-59,-60,]),'NE':([43,47,48,49,51,52,53,54,55,104,105,106,107,108,],[-62,77,-54,-57,-61,-63,-64,-65,-66,-55,-56,-58,-59,-60,]),'LT':([43,47,48,49,51,52,53,54,55,104,105,106,107,108,],[-62,78,-54,-57,-61,-63,-64,-65,-66,-55,-56,-58,-59,-60,]),'LE':([43,47,48,49,51,52,53,54,55,104,105,106,107,108,],[-62,79,-54,-57,-61,-63,-64,-65,-66,-55,-56,-58,-59,-60,]),'GT':([43,47,48,49,51,52,53,54,55,104,105,106,107,108,],[-62,80,-54,-57,-61,-63,-64,-65,-66,-55,-56,-58,-59,-60,]),'GE':([43,47,48,49,51,52,53,54,55,104,105,106,107,108,],[-62,81,-54,-57,-61,-63,-64,-65,-66,-55,-56,-58,-59,-60,]),'PLUS':([43,47,48,49,51,52,53,54,55,98,99,100,101,102,103,104,105,106,107,108,],[-62,82,-54,-57,-61,-63,-64,-65,-66,82,82,82,82,82,82,-55,-56,-58,-59,-60,]),'MINUS':([43,47,48,49,51,52,53,54,55,98,99,100,101,102,103,104,105,106,107,108,],[-62,83,-54,-57,-61,-63,-64,-65,-66,83,83,83,83,83,83,-55,-56,-58,-59,-60,]),'AND':([43,45,46,47,48,49,51,52,53,54,55,96,97,98,99,100,101,102,103,104,105,106,107,108,],[-62,74,-44,-47,-54,-57,-61,-63,-64,-65,-66,-45,-46,-48,-49,-50,-51,-52,-53,-55,-56,-58,-59,-60,]),'OR':([43,45,46,47,48,49,51,52,53,54,55,96,97,98,99,100,101,102,103,104,105,106,107,108,],[-62,75,-44,-47,-54,-57,-61,-63,-64,-65,-66,-45,-46,-48,-49,-50,-51,-52,-53,-55,-56,-58,-59,-60,]),'SEMICOLON':([43,44,45,46,47,48,49,51,52,53,54,55,66,67,68,69,70,71,72,87,91,96,97,98,99,100,101,102,103,104,105,106,107,108,119,],[-62,73,-43,-44,-47,-54,-57,-61,-63,-64,-65,-66,95,-9,-10,-11,-12,-13,-14,109,113,-45,-46,-48,-49,-50,-51,-52,-53,-55,-56,-58,-59,-60,126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'cuerpo':([2,],[3,]),'declaraciones':([2,3,],[4,27,]),'instrucciones':([2,3,25,134,135,],[5,28,40,136,137,]),'declaracion':([2,3,4,27,],[6,6,29,29,]),'instruccion':([2,3,5,25,28,40,134,135,136,137,],[7,7,30,7,30,30,7,7,30,30,]),'asignacion':([2,3,5,25,28,36,40,113,134,135,136,137,],[10,10,10,10,10,60,10,118,10,10,10,10,]),'decision':([2,3,5,25,28,40,134,135,136,137,],[11,11,11,11,11,11,11,11,11,11,]),'ciclo':([2,3,5,25,28,40,134,135,136,137,],[12,12,12,12,12,12,12,12,12,12,]),'para':([2,3,5,25,28,40,134,135,136,137,],[13,13,13,13,13,13,13,13,13,13,]),'do_mientras':([2,3,5,25,28,40,134,135,136,137,],[14,14,14,14,14,14,14,14,14,14,]),'tratamiento_error':([2,3,5,25,28,40,134,135,136,137,],[15,15,15,15,15,15,15,15,15,15,]),'seleccion_multiple':([2,3,5,25,28,40,134,135,136,137,],[16,16,16,16,16,16,16,16,16,16,]),'llamada_funcion':([2,3,5,25,28,40,134,135,136,137,],[17,17,17,17,17,17,17,17,17,17,]),'bloque':([2,3,5,22,23,25,28,40,89,90,117,120,125,134,135,136,137,],[18,18,18,37,38,18,18,18,111,112,124,127,132,18,18,18,18,]),'expresion':([32,33,34,35,39,50,60,88,92,],[44,57,58,59,64,86,91,110,114,]),'expresion_logica':([32,33,34,35,39,50,60,88,92,],[45,45,45,45,45,45,45,45,45,]),'expresion_relacional':([32,33,34,35,39,50,60,74,75,88,92,],[46,46,46,46,46,46,46,96,97,46,46,]),'expresion_aritmetica':([32,33,34,35,39,50,60,74,75,76,77,78,79,80,81,88,92,],[47,47,47,47,47,47,47,47,47,98,99,100,101,102,103,47,47,]),'termino':([32,33,34,35,39,50,60,74,75,76,77,78,79,80,81,82,83,88,92,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,104,105,48,48,]),'factor':([32,33,34,35,39,50,60,74,75,76,77,78,79,80,81,82,83,84,85,88,92,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,106,107,49,49,]),'valor':([32,33,34,35,39,50,60,74,75,76,77,78,79,80,81,82,83,84,85,88,92,123,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,131,]),'lista_expresiones':([33,],[56,]),'tipo':([42,],[66,]),'casos':([116,],[121,]),'caso':([116,121,],[122,129,]),'defecto':([121,],[128,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> INICIO cuerpo FIN','programa',3,'p_programa','parser.py',22),
  ('cuerpo -> declaraciones','cuerpo',1,'p_cuerpo','parser.py',26),
  ('cuerpo -> instrucciones','cuerpo',1,'p_cuerpo','parser.py',27),
  ('cuerpo -> cuerpo declaraciones','cuerpo',2,'p_cuerpo','parser.py',28),
  ('cuerpo -> cuerpo instrucciones','cuerpo',2,'p_cuerpo','parser.py',29),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','parser.py',36),
  ('declaraciones -> declaraciones declaracion','declaraciones',2,'p_declaraciones','parser.py',37),
  ('declaracion -> VAR IDENTIFICADOR COLON tipo SEMICOLON','declaracion',5,'p_declaracion','parser.py',44),
  ('tipo -> CHICOENTERO','tipo',1,'p_tipo','parser.py',48),
  ('tipo -> FLOTANTE','tipo',1,'p_tipo','parser.py',49),
  ('tipo -> DOBLE','tipo',1,'p_tipo','parser.py',50),
  ('tipo -> VERDADEROOFALSO','tipo',1,'p_tipo','parser.py',51),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',52),
  ('tipo -> LETRA','tipo',1,'p_tipo','parser.py',53),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','parser.py',57),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',58),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','parser.py',65),
  ('instruccion -> decision','instruccion',1,'p_instruccion','parser.py',66),
  ('instruccion -> ciclo','instruccion',1,'p_instruccion','parser.py',67),
  ('instruccion -> para','instruccion',1,'p_instruccion','parser.py',68),
  ('instruccion -> do_mientras','instruccion',1,'p_instruccion','parser.py',69),
  ('instruccion -> tratamiento_error','instruccion',1,'p_instruccion','parser.py',70),
  ('instruccion -> seleccion_multiple','instruccion',1,'p_instruccion','parser.py',71),
  ('instruccion -> llamada_funcion','instruccion',1,'p_instruccion','parser.py',72),
  ('instruccion -> bloque','instruccion',1,'p_instruccion','parser.py',73),
  ('asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','parser.py',77),
  ('decision -> PREGUNTAEXISTENCIAL LBRACKET expresion RBRACKET bloque PUESSINO bloque','decision',7,'p_decision','parser.py',81),
  ('ciclo -> MIENTRAS LBRACKET expresion RBRACKET bloque','ciclo',5,'p_ciclo','parser.py',85),
  ('para -> CUATRO LBRACKET asignacion expresion SEMICOLON asignacion RBRACKET bloque','para',8,'p_para','parser.py',89),
  ('do_mientras -> DOMIENTRAS bloque MIENTRAS LBRACKET expresion RBRACKET SEMICOLON','do_mientras',7,'p_do_mientras','parser.py',93),
  ('tratamiento_error -> INTENTA bloque AGARRAELERROR LBRACKET IDENTIFICADOR RBRACKET bloque','tratamiento_error',7,'p_tratamiento_error','parser.py',97),
  ('seleccion_multiple -> SWITCH LBRACKET expresion RBRACKET LBRACE casos defecto RBRACE','seleccion_multiple',8,'p_seleccion_multiple','parser.py',101),
  ('casos -> caso','casos',1,'p_casos','parser.py',105),
  ('casos -> casos caso','casos',2,'p_casos','parser.py',106),
  ('caso -> OPCION valor COLON instrucciones','caso',4,'p_caso','parser.py',113),
  ('defecto -> DEFAULT COLON instrucciones','defecto',3,'p_defecto','parser.py',117),
  ('llamada_funcion -> IDENTIFICADOR LBRACKET lista_expresiones RBRACKET SEMICOLON','llamada_funcion',5,'p_llamada_funcion','parser.py',121),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones','parser.py',125),
  ('lista_expresiones -> lista_expresiones COMMA expresion','lista_expresiones',3,'p_lista_expresiones','parser.py',126),
  ('lista_expresiones -> <empty>','lista_expresiones',0,'p_lista_expresiones','parser.py',127),
  ('bloque -> LBRACE instrucciones RBRACE','bloque',3,'p_bloque','parser.py',136),
  ('bloque -> LBRACE RBRACE','bloque',2,'p_bloque','parser.py',137),
  ('expresion -> expresion_logica','expresion',1,'p_expresion','parser.py',144),
  ('expresion_logica -> expresion_relacional','expresion_logica',1,'p_expresion_logica','parser.py',148),
  ('expresion_logica -> expresion_logica AND expresion_relacional','expresion_logica',3,'p_expresion_logica','parser.py',149),
  ('expresion_logica -> expresion_logica OR expresion_relacional','expresion_logica',3,'p_expresion_logica','parser.py',150),
  ('expresion_relacional -> expresion_aritmetica','expresion_relacional',1,'p_expresion_relacional','parser.py',157),
  ('expresion_relacional -> expresion_aritmetica EQ expresion_aritmetica','expresion_relacional',3,'p_expresion_relacional','parser.py',158),
  ('expresion_relacional -> expresion_aritmetica NE expresion_aritmetica','expresion_relacional',3,'p_expresion_relacional','parser.py',159),
  ('expresion_relacional -> expresion_aritmetica LT expresion_aritmetica','expresion_relacional',3,'p_expresion_relacional','parser.py',160),
  ('expresion_relacional -> expresion_aritmetica LE expresion_aritmetica','expresion_relacional',3,'p_expresion_relacional','parser.py',161),
  ('expresion_relacional -> expresion_aritmetica GT expresion_aritmetica','expresion_relacional',3,'p_expresion_relacional','parser.py',162),
  ('expresion_relacional -> expresion_aritmetica GE expresion_aritmetica','expresion_relacional',3,'p_expresion_relacional','parser.py',163),
  ('expresion_aritmetica -> termino','expresion_aritmetica',1,'p_expresion_aritmetica','parser.py',170),
  ('expresion_aritmetica -> expresion_aritmetica PLUS termino','expresion_aritmetica',3,'p_expresion_aritmetica','parser.py',171),
  ('expresion_aritmetica -> expresion_aritmetica MINUS termino','expresion_aritmetica',3,'p_expresion_aritmetica','parser.py',172),
  ('termino -> factor','termino',1,'p_termino','parser.py',179),
  ('termino -> termino TIMES factor','termino',3,'p_termino','parser.py',180),
  ('termino -> termino DIVIDE factor','termino',3,'p_termino','parser.py',181),
  ('factor -> LBRACKET expresion RBRACKET','factor',3,'p_factor','parser.py',188),
  ('factor -> valor','factor',1,'p_factor','parser.py',189),
  ('factor -> IDENTIFICADOR','factor',1,'p_factor','parser.py',190),
  ('valor -> NUMERO','valor',1,'p_valor','parser.py',199),
  ('valor -> VERDAD','valor',1,'p_valor','parser.py',200),
  ('valor -> FAKE','valor',1,'p_valor','parser.py',201),
  ('valor -> CADENA','valor',1,'p_valor','parser.py',202),
]
