
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocEQNELTLEGTGEleftPLUSMINUSleftTIMESDIVIDErightEQUALSnonassocLBRACKETRBRACKETnonassocPREGUNTAEXISTENCIALMIENTRASCUATROAGARRAELERROR AND CADENA CHICOENTERO COLON COMMA CUATRO DEFAULT DIVIDE DOBLE DOMIENTRAS EQ EQUALS FAKE FIN FLOTANTE GE GT IDENTIFICADOR INICIO INTENTA LBRACE LBRACKET LE LETRA LT MIENTRAS MIENTRAS_POST MINUS NE NUMERO OPCION OR PLUS PREGUNTAEXISTENCIAL PRINT PUESSINO RBRACE RBRACKET SEMICOLON STRING SWITCH TIMES VAR VERDAD VERDADEROOFALSOprograma : INICIO cuerpo FINcuerpo : declaraciones\n| instrucciones\n| cuerpo declaraciones\n| cuerpo instruccionesdeclaraciones : declaracion\n| declaraciones declaraciondeclaracion : VAR IDENTIFICADOR COLON tipo SEMICOLONtipo : CHICOENTERO\n| FLOTANTE\n| DOBLE\n| VERDADEROOFALSO\n| STRING\n| LETRAinstrucciones : instruccion\n| instrucciones instruccioninstruccion : asignacion\n| decision\n| ciclo\n| para\n| do_mientras\n| tratamiento_error\n| seleccion_multiple\n| llamada_funcion\n| bloqueasignacion : IDENTIFICADOR EQUALS expresion SEMICOLONdecision : PREGUNTAEXISTENCIAL LBRACKET expresion RBRACKET bloque PUESSINO bloquedecision : PREGUNTAEXISTENCIAL LBRACKET expresion RBRACKET bloqueciclo : MIENTRAS LBRACKET expresion RBRACKET bloquepara : CUATRO LBRACKET asignacion expresion SEMICOLON asignacion RBRACKET bloquedo_mientras : DOMIENTRAS bloque MIENTRAS_POST LBRACKET expresion RBRACKET SEMICOLONtratamiento_error : INTENTA bloque AGARRAELERROR LBRACKET IDENTIFICADOR RBRACKET bloqueseleccion_multiple : SWITCH LBRACKET expresion RBRACKET LBRACE casos defecto RBRACEcasos : caso\n| casos casocaso : OPCION valor COLON bloquedefecto : DEFAULT COLON bloquellamada_funcion : PRINT LBRACKET lista_expresiones RBRACKET SEMICOLONlista_expresiones : expresion\n| lista_expresiones COMMA expresion\n| bloque : LBRACE instrucciones RBRACE\n| LBRACE RBRACEexpresion : expresion_logicaexpresion_logica : expresion_relacional\n| expresion_logica AND expresion_relacional\n| expresion_logica OR expresion_relacionalexpresion_relacional : expresion_aritmetica\n| expresion_aritmetica EQ expresion_aritmetica\n| expresion_aritmetica NE expresion_aritmetica\n| expresion_aritmetica LT expresion_aritmetica\n| expresion_aritmetica LE expresion_aritmetica\n| expresion_aritmetica GT expresion_aritmetica\n| expresion_aritmetica GE expresion_aritmeticaexpresion_aritmetica : termino\n| expresion_aritmetica PLUS termino\n| expresion_aritmetica MINUS terminotermino : factor\n| termino TIMES factor\n| termino DIVIDE factorfactor : LBRACKET expresion RBRACKET\n| valor\n| IDENTIFICADORvalor : NUMERO\n| VERDAD\n| FAKE\n| CADENA'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,27,],[0,-1,]),'VAR':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,28,29,30,31,41,63,73,95,109,110,115,124,126,127,132,133,],[8,8,8,-3,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,8,-5,-7,-16,-43,-42,-26,-8,-28,-29,-38,-27,-31,-32,-30,-33,]),'IDENTIFICADOR':([2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,25,28,29,30,31,33,34,35,36,39,40,41,42,51,59,63,73,74,75,76,77,78,79,80,81,82,83,84,85,90,91,94,95,109,110,111,115,124,126,127,132,133,],[9,9,-2,9,-6,-15,32,-17,-18,-19,-20,-21,-22,-23,-24,-25,9,-4,9,-7,-16,44,44,44,9,44,9,-43,44,44,44,-42,-26,44,44,44,44,44,44,44,44,44,44,44,44,44,113,44,-8,-28,-29,9,-38,-27,-31,-32,-30,-33,]),'PREGUNTAEXISTENCIAL':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,25,28,29,30,31,40,41,63,73,95,109,110,115,124,126,127,132,133,],[19,19,-2,19,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,19,-4,19,-7,-16,19,-43,-42,-26,-8,-28,-29,-38,-27,-31,-32,-30,-33,]),'MIENTRAS':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,25,28,29,30,31,40,41,63,73,95,109,110,115,124,126,127,132,133,],[20,20,-2,20,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,20,-4,20,-7,-16,20,-43,-42,-26,-8,-28,-29,-38,-27,-31,-32,-30,-33,]),'CUATRO':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,25,28,29,30,31,40,41,63,73,95,109,110,115,124,126,127,132,133,],[21,21,-2,21,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,21,-4,21,-7,-16,21,-43,-42,-26,-8,-28,-29,-38,-27,-31,-32,-30,-33,]),'DOMIENTRAS':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,25,28,29,30,31,40,41,63,73,95,109,110,115,124,126,127,132,133,],[22,22,-2,22,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,22,-4,22,-7,-16,22,-43,-42,-26,-8,-28,-29,-38,-27,-31,-32,-30,-33,]),'INTENTA':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,25,28,29,30,31,40,41,63,73,95,109,110,115,124,126,127,132,133,],[23,23,-2,23,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,23,-4,23,-7,-16,23,-43,-42,-26,-8,-28,-29,-38,-27,-31,-32,-30,-33,]),'SWITCH':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,25,28,29,30,31,40,41,63,73,95,109,110,115,124,126,127,132,133,],[24,24,-2,24,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,24,-4,24,-7,-16,24,-43,-42,-26,-8,-28,-29,-38,-27,-31,-32,-30,-33,]),'PRINT':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,25,28,29,30,31,40,41,63,73,95,109,110,115,124,126,127,132,133,],[26,26,-2,26,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,26,-4,26,-7,-16,26,-43,-42,-26,-8,-28,-29,-38,-27,-31,-32,-30,-33,]),'LBRACE':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,22,23,25,28,29,30,31,40,41,63,73,87,88,92,95,109,110,115,117,120,124,125,126,127,132,133,134,135,],[25,25,-2,25,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,25,25,25,-4,25,-7,-16,25,-43,-42,-26,25,25,114,-8,-28,-29,-38,25,25,-27,25,-31,-32,-30,-33,25,25,]),'FIN':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,28,29,30,31,41,63,73,95,109,110,115,124,126,127,132,133,],[27,-2,-3,-6,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-4,-5,-7,-16,-43,-42,-26,-8,-28,-29,-38,-27,-31,-32,-30,-33,]),'RBRACE':([7,10,11,12,13,14,15,16,17,18,25,31,40,41,63,73,109,110,115,124,126,127,128,132,133,136,],[-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,41,-16,63,-43,-42,-26,-28,-29,-38,-27,-31,-32,133,-30,-33,-37,]),'EQUALS':([9,],[33,]),'LBRACKET':([19,20,21,24,26,33,34,35,39,42,51,59,60,61,73,74,75,76,77,78,79,80,81,82,83,84,85,90,94,],[34,35,36,39,42,51,51,51,51,51,51,51,90,91,-26,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'COLON':([32,53,54,55,56,130,131,],[43,-64,-65,-66,-67,134,135,]),'NUMERO':([33,34,35,39,42,51,59,73,74,75,76,77,78,79,80,81,82,83,84,85,90,94,123,],[53,53,53,53,53,53,53,-26,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'VERDAD':([33,34,35,39,42,51,59,73,74,75,76,77,78,79,80,81,82,83,84,85,90,94,123,],[54,54,54,54,54,54,54,-26,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'FAKE':([33,34,35,39,42,51,59,73,74,75,76,77,78,79,80,81,82,83,84,85,90,94,123,],[55,55,55,55,55,55,55,-26,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'CADENA':([33,34,35,39,42,51,59,73,74,75,76,77,78,79,80,81,82,83,84,85,90,94,123,],[56,56,56,56,56,56,56,-26,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'MIENTRAS_POST':([37,41,63,],[60,-43,-42,]),'AGARRAELERROR':([38,41,63,],[61,-43,-42,]),'PUESSINO':([41,63,109,],[-43,-42,117,]),'DEFAULT':([41,63,121,122,129,137,],[-43,-42,130,-34,-35,-36,]),'OPCION':([41,63,114,121,122,129,137,],[-43,-42,123,123,-34,-35,-36,]),'RBRACKET':([42,44,46,47,48,49,50,52,53,54,55,56,57,58,62,64,65,73,86,96,97,98,99,100,101,102,103,104,105,106,107,108,112,113,116,118,],[-41,-63,-44,-45,-48,-55,-58,-62,-64,-65,-66,-67,87,88,92,93,-39,-26,108,-46,-47,-49,-50,-51,-52,-53,-54,-56,-57,-59,-60,-61,119,120,-40,125,]),'COMMA':([42,44,46,47,48,49,50,52,53,54,55,56,64,65,96,97,98,99,100,101,102,103,104,105,106,107,108,116,],[-41,-63,-44,-45,-48,-55,-58,-62,-64,-65,-66,-67,94,-39,-46,-47,-49,-50,-51,-52,-53,-54,-56,-57,-59,-60,-61,-40,]),'CHICOENTERO':([43,],[67,]),'FLOTANTE':([43,],[68,]),'DOBLE':([43,],[69,]),'VERDADEROOFALSO':([43,],[70,]),'STRING':([43,],[71,]),'LETRA':([43,],[72,]),'TIMES':([44,49,50,52,53,54,55,56,104,105,106,107,108,],[-63,84,-58,-62,-64,-65,-66,-67,84,84,-59,-60,-61,]),'DIVIDE':([44,49,50,52,53,54,55,56,104,105,106,107,108,],[-63,85,-58,-62,-64,-65,-66,-67,85,85,-59,-60,-61,]),'EQ':([44,48,49,50,52,53,54,55,56,104,105,106,107,108,],[-63,76,-55,-58,-62,-64,-65,-66,-67,-56,-57,-59,-60,-61,]),'NE':([44,48,49,50,52,53,54,55,56,104,105,106,107,108,],[-63,77,-55,-58,-62,-64,-65,-66,-67,-56,-57,-59,-60,-61,]),'LT':([44,48,49,50,52,53,54,55,56,104,105,106,107,108,],[-63,78,-55,-58,-62,-64,-65,-66,-67,-56,-57,-59,-60,-61,]),'LE':([44,48,49,50,52,53,54,55,56,104,105,106,107,108,],[-63,79,-55,-58,-62,-64,-65,-66,-67,-56,-57,-59,-60,-61,]),'GT':([44,48,49,50,52,53,54,55,56,104,105,106,107,108,],[-63,80,-55,-58,-62,-64,-65,-66,-67,-56,-57,-59,-60,-61,]),'GE':([44,48,49,50,52,53,54,55,56,104,105,106,107,108,],[-63,81,-55,-58,-62,-64,-65,-66,-67,-56,-57,-59,-60,-61,]),'PLUS':([44,48,49,50,52,53,54,55,56,98,99,100,101,102,103,104,105,106,107,108,],[-63,82,-55,-58,-62,-64,-65,-66,-67,82,82,82,82,82,82,-56,-57,-59,-60,-61,]),'MINUS':([44,48,49,50,52,53,54,55,56,98,99,100,101,102,103,104,105,106,107,108,],[-63,83,-55,-58,-62,-64,-65,-66,-67,83,83,83,83,83,83,-56,-57,-59,-60,-61,]),'AND':([44,46,47,48,49,50,52,53,54,55,56,96,97,98,99,100,101,102,103,104,105,106,107,108,],[-63,74,-45,-48,-55,-58,-62,-64,-65,-66,-67,-46,-47,-49,-50,-51,-52,-53,-54,-56,-57,-59,-60,-61,]),'OR':([44,46,47,48,49,50,52,53,54,55,56,96,97,98,99,100,101,102,103,104,105,106,107,108,],[-63,75,-45,-48,-55,-58,-62,-64,-65,-66,-67,-46,-47,-49,-50,-51,-52,-53,-54,-56,-57,-59,-60,-61,]),'SEMICOLON':([44,45,46,47,48,49,50,52,53,54,55,56,66,67,68,69,70,71,72,89,93,96,97,98,99,100,101,102,103,104,105,106,107,108,119,],[-63,73,-44,-45,-48,-55,-58,-62,-64,-65,-66,-67,95,-9,-10,-11,-12,-13,-14,111,115,-46,-47,-49,-50,-51,-52,-53,-54,-56,-57,-59,-60,-61,126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'cuerpo':([2,],[3,]),'declaraciones':([2,3,],[4,28,]),'instrucciones':([2,3,25,],[5,29,40,]),'declaracion':([2,3,4,28,],[6,6,30,30,]),'instruccion':([2,3,5,25,29,40,],[7,7,31,7,31,31,]),'asignacion':([2,3,5,25,29,36,40,111,],[10,10,10,10,10,59,10,118,]),'decision':([2,3,5,25,29,40,],[11,11,11,11,11,11,]),'ciclo':([2,3,5,25,29,40,],[12,12,12,12,12,12,]),'para':([2,3,5,25,29,40,],[13,13,13,13,13,13,]),'do_mientras':([2,3,5,25,29,40,],[14,14,14,14,14,14,]),'tratamiento_error':([2,3,5,25,29,40,],[15,15,15,15,15,15,]),'seleccion_multiple':([2,3,5,25,29,40,],[16,16,16,16,16,16,]),'llamada_funcion':([2,3,5,25,29,40,],[17,17,17,17,17,17,]),'bloque':([2,3,5,22,23,25,29,40,87,88,117,120,125,134,135,],[18,18,18,37,38,18,18,18,109,110,124,127,132,136,137,]),'expresion':([33,34,35,39,42,51,59,90,94,],[45,57,58,62,65,86,89,112,116,]),'expresion_logica':([33,34,35,39,42,51,59,90,94,],[46,46,46,46,46,46,46,46,46,]),'expresion_relacional':([33,34,35,39,42,51,59,74,75,90,94,],[47,47,47,47,47,47,47,96,97,47,47,]),'expresion_aritmetica':([33,34,35,39,42,51,59,74,75,76,77,78,79,80,81,90,94,],[48,48,48,48,48,48,48,48,48,98,99,100,101,102,103,48,48,]),'termino':([33,34,35,39,42,51,59,74,75,76,77,78,79,80,81,82,83,90,94,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,104,105,49,49,]),'factor':([33,34,35,39,42,51,59,74,75,76,77,78,79,80,81,82,83,84,85,90,94,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,106,107,50,50,]),'valor':([33,34,35,39,42,51,59,74,75,76,77,78,79,80,81,82,83,84,85,90,94,123,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,131,]),'lista_expresiones':([42,],[64,]),'tipo':([43,],[66,]),'casos':([114,],[121,]),'caso':([114,121,],[122,129,]),'defecto':([121,],[128,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> INICIO cuerpo FIN','programa',3,'p_programa','parser.py',25),
  ('cuerpo -> declaraciones','cuerpo',1,'p_cuerpo','parser.py',29),
  ('cuerpo -> instrucciones','cuerpo',1,'p_cuerpo','parser.py',30),
  ('cuerpo -> cuerpo declaraciones','cuerpo',2,'p_cuerpo','parser.py',31),
  ('cuerpo -> cuerpo instrucciones','cuerpo',2,'p_cuerpo','parser.py',32),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','parser.py',39),
  ('declaraciones -> declaraciones declaracion','declaraciones',2,'p_declaraciones','parser.py',40),
  ('declaracion -> VAR IDENTIFICADOR COLON tipo SEMICOLON','declaracion',5,'p_declaracion','parser.py',47),
  ('tipo -> CHICOENTERO','tipo',1,'p_tipo','parser.py',51),
  ('tipo -> FLOTANTE','tipo',1,'p_tipo','parser.py',52),
  ('tipo -> DOBLE','tipo',1,'p_tipo','parser.py',53),
  ('tipo -> VERDADEROOFALSO','tipo',1,'p_tipo','parser.py',54),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',55),
  ('tipo -> LETRA','tipo',1,'p_tipo','parser.py',56),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','parser.py',60),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',61),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','parser.py',68),
  ('instruccion -> decision','instruccion',1,'p_instruccion','parser.py',69),
  ('instruccion -> ciclo','instruccion',1,'p_instruccion','parser.py',70),
  ('instruccion -> para','instruccion',1,'p_instruccion','parser.py',71),
  ('instruccion -> do_mientras','instruccion',1,'p_instruccion','parser.py',72),
  ('instruccion -> tratamiento_error','instruccion',1,'p_instruccion','parser.py',73),
  ('instruccion -> seleccion_multiple','instruccion',1,'p_instruccion','parser.py',74),
  ('instruccion -> llamada_funcion','instruccion',1,'p_instruccion','parser.py',75),
  ('instruccion -> bloque','instruccion',1,'p_instruccion','parser.py',76),
  ('asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','parser.py',80),
  ('decision -> PREGUNTAEXISTENCIAL LBRACKET expresion RBRACKET bloque PUESSINO bloque','decision',7,'p_decision','parser.py',84),
  ('decision -> PREGUNTAEXISTENCIAL LBRACKET expresion RBRACKET bloque','decision',5,'p_decision_solo_if','parser.py',88),
  ('ciclo -> MIENTRAS LBRACKET expresion RBRACKET bloque','ciclo',5,'p_ciclo','parser.py',92),
  ('para -> CUATRO LBRACKET asignacion expresion SEMICOLON asignacion RBRACKET bloque','para',8,'p_para','parser.py',96),
  ('do_mientras -> DOMIENTRAS bloque MIENTRAS_POST LBRACKET expresion RBRACKET SEMICOLON','do_mientras',7,'p_do_mientras','parser.py',100),
  ('tratamiento_error -> INTENTA bloque AGARRAELERROR LBRACKET IDENTIFICADOR RBRACKET bloque','tratamiento_error',7,'p_tratamiento_error','parser.py',104),
  ('seleccion_multiple -> SWITCH LBRACKET expresion RBRACKET LBRACE casos defecto RBRACE','seleccion_multiple',8,'p_seleccion_multiple','parser.py',108),
  ('casos -> caso','casos',1,'p_casos','parser.py',112),
  ('casos -> casos caso','casos',2,'p_casos','parser.py',113),
  ('caso -> OPCION valor COLON bloque','caso',4,'p_caso','parser.py',120),
  ('defecto -> DEFAULT COLON bloque','defecto',3,'p_defecto','parser.py',124),
  ('llamada_funcion -> PRINT LBRACKET lista_expresiones RBRACKET SEMICOLON','llamada_funcion',5,'p_llamada_funcion','parser.py',128),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones','parser.py',132),
  ('lista_expresiones -> lista_expresiones COMMA expresion','lista_expresiones',3,'p_lista_expresiones','parser.py',133),
  ('lista_expresiones -> <empty>','lista_expresiones',0,'p_lista_expresiones','parser.py',134),
  ('bloque -> LBRACE instrucciones RBRACE','bloque',3,'p_bloque','parser.py',143),
  ('bloque -> LBRACE RBRACE','bloque',2,'p_bloque','parser.py',144),
  ('expresion -> expresion_logica','expresion',1,'p_expresion','parser.py',151),
  ('expresion_logica -> expresion_relacional','expresion_logica',1,'p_expresion_logica','parser.py',155),
  ('expresion_logica -> expresion_logica AND expresion_relacional','expresion_logica',3,'p_expresion_logica','parser.py',156),
  ('expresion_logica -> expresion_logica OR expresion_relacional','expresion_logica',3,'p_expresion_logica','parser.py',157),
  ('expresion_relacional -> expresion_aritmetica','expresion_relacional',1,'p_expresion_relacional','parser.py',164),
  ('expresion_relacional -> expresion_aritmetica EQ expresion_aritmetica','expresion_relacional',3,'p_expresion_relacional','parser.py',165),
  ('expresion_relacional -> expresion_aritmetica NE expresion_aritmetica','expresion_relacional',3,'p_expresion_relacional','parser.py',166),
  ('expresion_relacional -> expresion_aritmetica LT expresion_aritmetica','expresion_relacional',3,'p_expresion_relacional','parser.py',167),
  ('expresion_relacional -> expresion_aritmetica LE expresion_aritmetica','expresion_relacional',3,'p_expresion_relacional','parser.py',168),
  ('expresion_relacional -> expresion_aritmetica GT expresion_aritmetica','expresion_relacional',3,'p_expresion_relacional','parser.py',169),
  ('expresion_relacional -> expresion_aritmetica GE expresion_aritmetica','expresion_relacional',3,'p_expresion_relacional','parser.py',170),
  ('expresion_aritmetica -> termino','expresion_aritmetica',1,'p_expresion_aritmetica','parser.py',177),
  ('expresion_aritmetica -> expresion_aritmetica PLUS termino','expresion_aritmetica',3,'p_expresion_aritmetica','parser.py',178),
  ('expresion_aritmetica -> expresion_aritmetica MINUS termino','expresion_aritmetica',3,'p_expresion_aritmetica','parser.py',179),
  ('termino -> factor','termino',1,'p_termino','parser.py',186),
  ('termino -> termino TIMES factor','termino',3,'p_termino','parser.py',187),
  ('termino -> termino DIVIDE factor','termino',3,'p_termino','parser.py',188),
  ('factor -> LBRACKET expresion RBRACKET','factor',3,'p_factor','parser.py',195),
  ('factor -> valor','factor',1,'p_factor','parser.py',196),
  ('factor -> IDENTIFICADOR','factor',1,'p_factor','parser.py',197),
  ('valor -> NUMERO','valor',1,'p_valor','parser.py',206),
  ('valor -> VERDAD','valor',1,'p_valor','parser.py',207),
  ('valor -> FAKE','valor',1,'p_valor','parser.py',208),
  ('valor -> CADENA','valor',1,'p_valor','parser.py',209),
]
